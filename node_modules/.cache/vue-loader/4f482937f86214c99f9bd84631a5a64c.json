{"remainingRequest":"/Applications/import/vue-echarts/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/import/vue-echarts/src/components/Seller.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Applications/import/vue-echarts/src/components/Seller.vue","mtime":1603870925814},{"path":"/Applications/import/vue-echarts/node_modules/cache-loader/dist/cjs.js","mtime":1597640157829},{"path":"/Applications/import/vue-echarts/node_modules/babel-loader/lib/index.js","mtime":1595844826324},{"path":"/Applications/import/vue-echarts/node_modules/cache-loader/dist/cjs.js","mtime":1597640157829},{"path":"/Applications/import/vue-echarts/node_modules/vue-loader/lib/index.js","mtime":1597975146981}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoYXJ0c0luc3RhbmNlOm51bGwsCiAgICAgIGFsbERhdGE6bnVsbCwgIC8v5pyN5Yqh5Zmo6L+U5Zue55qE5pWw5o2uCiAgICAgIGN1cnJlbnRQYWdlOjEsLy/lvZPliY3mmL7npLrpobXmlbAKICAgICAgdG90YWxQYWdlOjAsIC8v5LiA5YWx5pyJ5aSa5bCR6aG1CiAgICAgIHRpbWVySWQ6bnVsbC8v5a+55bqU5a6a5pe25ZmoCiAgICB9OwogIH0sCiAgbW91bnRlZCgpewogICAgdGhpcy5pbml0Q2hhcnQoKQogICAgdGhpcy5nZXREYXRhKCkKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLHRoaXMuc2NyZWVuQWRhcHRlcikKICAgIHRoaXMuc2NyZWVuQWRhcHRlcigpLy/lnKjpobXpnaLliqDovb3lrozmiJDml7bvvIzkuLvliqjov5vooYzlsY/luZXnmoTpgILphY3vvIjlpoLnrKzkuIDmrKHov5vlhaXpobXpnaLml7bvvIkKICB9LAogIGRlc3Ryb3llZCAoKSB7CiAgICBjbGVhckludGVydmFsKHRoaXMudGltZXJJZCkKICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLHRoaXMuc2NyZWVuQWRhcHRlcikvL+WcqOe7hOS7tumUgOavgeaXtu+8jOmcgOimgeWwhuebkeWQrOWZqOWPlua2iOaOiQogIH0sCiAgbWV0aG9kczogewogICAgLy/liJ3lp4vljJZlY2hhcnRzSW5zdGFuY2Xlr7nosaEs6ZyA6KaB5YWo5bGAZWNoYXJ0c+WvueixoQogICAgaW5pdENoYXJ0KCl7CiAgICAgIHRoaXMuY2hhcnRzSW5zdGFuY2U9dGhpcy4kZWNoYXJ0cy5pbml0KHRoaXMuJHJlZnMuc2VsbGVyX3JlZiwnY2hhbGsnKQogICAgICAvL+WvueWbvuihqOWIneWni+WMlumFjee9rueahOaOp+WItgogICAgICBjb25zdCBpbml0T3B0aW9uID0gewogICAgICAgICAgICB0aXRsZTp7CiAgICAgICAgIHRleHQ6IvCfl50g5ZWG5a626ZSA5ZSu57uf6K6hIiwKICAgICAgICAgbGVmdDoyMCwKICAgICAgICAgdG9wOjIwCiAgICAgICAgfSwKICAgICAgICBncmlkOnsvL+WdkOagh+i9tOeahOmFjee9rgogICAgICAgICAgdG9wOicyMCUnLAogICAgICAgICAgbGVmdDonMyUnLAogICAgICAgICAgcmlnaHQ6JzYlJywKICAgICAgICAgIGJvdHRvbTonMyUnLAogICAgICAgICAgY29udGFpbkxhYmVsOnRydWUgLy/ot53nprvmmK/ljIXlkKvlnZDmoIfovbTkuIrnmoTmloflrZcKICAgICAgICB9LAogICAgICAgICB4QXhpczp7CiAgICAgICAgICAgdHlwZTondmFsdWUnCiAgICAgICAgIH0sCiAgICAgICAgIHlBeGlzOnsKICAgICAgICAgICB0eXBlOidjYXRlZ29yeScKICAgICAgICAgfSwKICAgICAgICAgdG9vbHRpcDp7Ly/pvKDmoIfnp7vkuIrljrvnmoTphY3nva4KICAgICAgICAgIHRyaWdnZXI6J2F4aXMnLAogICAgICAgICAgYXhpc1BvaW50ZXI6IHsKICAgICAgICAgICAgdHlwZTonbGluZScsCiAgICAgICAgICAgIHo6MCwKICAgICAgICAgICAgbGluZVN0eWxlOnsKICAgICAgICAgICAgICBjb2xvcjonIzJEMzQ0MycKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICBzZXJpZXM6WwogICAgICAgICAgIHsKICAgICAgICAgICAgIHR5cGU6ImJhciIsCiAgICAgICAgICAgICBsYWJlbDp7Ly/mloflrZfnmoTmmL7npLoKICAgICAgICAgICAgICAgc2hvdzp0cnVlLAogICAgICAgICAgICAgICBwb3NpdGlvbjoncmlnaHQnLAogICAgICAgICAgICAgICB0ZXh0U3R5bGU6ewogICAgICAgICAgICAgICAgIGNvbG9yOid3aGl0ZScKICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgfSwKICAgICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICAgIC8vICBiYXJCb3JkZXJSYWRpdXM6WzAsMjAsMjAsMCBdLC8v5pWw57uE5YiG5Yir5pi+56S65bem5LiK6KeS77yM5Y+z5LiK6KeS77yM5Y+z5LiL6KeS77yM5bem5LiL6KeS55qE5aSn5bCPCiAgICAgICAgICAgICAgIC8v5oyH5piO6aKc6Imy5riQ5Y+Y55qE5pa55ZCRCiAgICAgICAgICAgICAgIC8v5oyH5piO5LiN5ZCM55m+5YiG5q+U5LmL5LiL6aKc6Imy55qE5YC8CiAgICAgICAgICAgICAgIGNvbG9yOm5ldyB0aGlzLiRlY2hhcnRzLmdyYXBoaWMuTGluZWFyR3JhZGllbnQoMCwwLDEsMCxbCiAgICAgICAgICAgICAgICAgLy/nmb7liIbkuYsw54q25oCB5LmL5LiL55qE6aKc6Imy5YC8CiAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgb2Zmc2V0OjAsCiAgICAgICAgICAgICAgICAgICBjb2xvcjonIzUwNTJlZScKICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgIC8v55m+5YiG5LmLMTAw54q25oCB5LiL55qE6aKc6Imy5YC8CiAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgb2Zmc2V0OjEsCiAgICAgICAgICAgICAgICAgICBjb2xvcjonI2FiNmVlNScKICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgIF0pCgogICAgICAgICAgICAgfQogICAgICAgICAgIH0KICAgICAgICAgXQogICAgICB9CiAgICAgIHRoaXMuY2hhcnRzSW5zdGFuY2Uuc2V0T3B0aW9uKGluaXRPcHRpb24pCiAgICAgIC8v5a+55Zu+6KGo5a+56LGh6L+b6KGM6byg5qCH5LqL5Lu255qE55uR5ZCsCiAgICAgIHRoaXMuY2hhcnRzSW5zdGFuY2Uub24oJ21vdXNlb3ZlcicsKCk9PnsKICAgICAgICBjbGVhckludGVydmFsKHRoaXMudGltZXJJZCkKICAgICAgfSkKICAgICAgdGhpcy5jaGFydHNJbnN0YW5jZS5vbignbW91c2VvdXQnLCgpPT57CiAgICAgICAgdGhpcy5zdGFydEludGVydmFsKCkKICAgICAgfSkKICAgIH0sCiAgICAvL+iOt+WPluacjeWKoeWZqOeahOaVsOaNrgogICAgYXN5bmMgZ2V0RGF0YSgpewogICAgICAvL2h0dHA6Ly8xMjcuMC4wLjE6ODg4OC9hcGkvc2VsbGVyLG1haW4uanPphY3nva7nmoQs5byA5ZCva29hX3NlcnZlLG5vZGUgYXBwLmpzCiAgICAgIGNvbnN0IHtkYXRhOnJldH09YXdhaXQgdGhpcy4kaHR0cC5nZXQoJ3NlbGxlcicpLy/mmK/kuIDkuKpwcm9taXNl5a+56LGhCiAgICAgIC8vIGNvbnNvbGUubG9nKHJldCkKICAgICAgdGhpcy5hbGxEYXRhID0gcmV0CiAgICAgIC8v5a+55pWw57uE5o6S5bqPCiAgICAgIHRoaXMuYWxsRGF0YS5zb3J0KChhLGIpPT57CiAgICAgICAgcmV0dXJuIGEudmFsdWUgLSBiLnZhbHVlIC8v5LuO5bCP5Yiw5aSn55qE5o6S5bqPCiAgICAgIH0pCiAgICAgIC8v5q+P5LqU5Liq5YWD57Sg5pi+56S65LiA6aG1CiAgICAgIHRoaXMudG90YWxQYWdlID0gdGhpcy5hbGxEYXRhLmxlbmd0aCAlIDUgPT09MCA/IHRoaXMuYWxsRGF0YS5sZW5ndGgvNTp0aGlzLmFsbERhdGEubGVuZ3RoLzUrMQogICAgICAvL+iOt+WPluWIsOaVsOaNruS5i+WQjuabtOaWsOWbvuihqAogICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCkKICAgICAgLy/lkK/liqjlrprml7blmagKICAgICAgdGhpcy5zdGFydEludGVydmFsKCkKICAgIH0sCiAgICAvL+abtOaWsOWbvuihqAogICAgdXBkYXRlQ2hhcnQgKCkgewogICAgICAvL+aVsOaNruWIhumhteaYvuekugogICAgICBjb25zdCBzdGFydCA9ICh0aGlzLmN1cnJlbnRQYWdlIC0gMSkgKiA1CiAgICAgIGNvbnN0IGVuZCA9IHRoaXMuY3VycmVudFBhZ2UgKiA1CiAgICAgIGNvbnN0IHNob3dEYXRhID0gdGhpcy5hbGxEYXRhLnNsaWNlKHN0YXJ0LGVuZCkKICAgICAgY29uc3Qgc2VsbGVyTmFtZXMgPSBzaG93RGF0YS5tYXAoKGl0ZW0pPT57CiAgICAgICAgcmV0dXJuIGl0ZW0ubmFtZQogICAgICB9KQogICAgICBjb25zdCBzZWxsZXJWYWx1ZXMgPSBzaG93RGF0YS5tYXAoKGl0ZW0pPT57CiAgICAgICAgcmV0dXJuIGl0ZW0udmFsdWUKICAgICAgfSkKICAgICAgY29uc3QgZGF0YU9wdGlvbiA9IHsKICAgICAgICAgeUF4aXM6ewogICAgICAgICAgIGRhdGE6c2VsbGVyTmFtZXMKICAgICAgICAgfSwKICAgICAgICAgc2VyaWVzOlsKICAgICAgICAgICB7CiAgICAgICAgICAgICBkYXRhOnNlbGxlclZhbHVlcywKICAgICAgICAgICB9CiAgICAgICAgIF0KICAgICAgfQogICAgICAvL+WwhumFjee9rumhueiuvue9rue7mWVjaGFydHPlrp7kvovlr7nosaEKICAgICAgdGhpcy5jaGFydHNJbnN0YW5jZS5zZXRPcHRpb24oZGF0YU9wdGlvbikKICAgIH0sCiAgICBzdGFydEludGVydmFsKCl7CiAgICAgIGlmKHRoaXMudGltZXJJZCl7CiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVySWQpCiAgICAgIH0KICAgICAgdGhpcy50aW1lcklkID0gc2V0SW50ZXJ2YWwoKCk9PnsKICAgICAgICB0aGlzLmN1cnJlbnRQYWdlKysKICAgICAgICBpZih0aGlzLmN1cnJlbnRQYWdlPnRoaXMudG90YWxQYWdlKXsvL+i+ueeVjOWkhOeQhgogICAgICAgICAgdGhpcy5jdXJyZW50UGFnZSA9IDEKICAgICAgICB9CiAgICAgICAgdGhpcy51cGRhdGVDaGFydCgpCiAgICAgIH0sNjAwMCkKICAgIH0sCiAgICAvL+W9k+a1j+iniOWZqOeahOWkp+Wwj+WPkeeUn+WPmOWMluaXtu+8jOS8muiwg+eUqOeahOaWueazle+8jOadpeWujOaIkOWxj+W5leeahOmAgumFjQogICAgc2NyZWVuQWRhcHRlcigpewogICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLiRyZWZzLnNlbGxlcl9yZWYub2Zmc2V0V2lkdGgpCiAgICAgIGNvbnN0IHRpdGxlRm9udFNpemUgPSB0aGlzLiRyZWZzLnNlbGxlcl9yZWYub2Zmc2V0V2lkdGgvMTAwKjMuNgogICAgICBjb25zdCBhZGFwdGVyT3B0aW9uPXsvL+WSjOWIhui+qOeOh+Wkp+Wwj+ebuOWFs+eahOmFjee9rumhuQogICAgICAgICB0aXRsZTp7CiAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgIGZvbnRTaXplOnRpdGxlRm9udFNpemUKICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgIHRvb2x0aXA6ewogICAgICAgICAgYXhpc1BvaW50ZXI6IHsKICAgICAgICAgICAgbGluZVN0eWxlOnsKICAgICAgICAgICAgICB3aWR0aDp0aXRsZUZvbnRTaXplCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgc2VyaWVzOlsKICAgICAgICAgICB7CiAgICAgICAgICAgICBiYXJXaWR0aDp0aXRsZUZvbnRTaXplLCAvL+aOp+WItuWbvuihqOeahOWkp+WwjwogICAgICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgICAgIGJhckJvcmRlclJhZGl1czpbMCx0aXRsZUZvbnRTaXplLzIsdGl0bGVGb250U2l6ZS8yLDAgXSwvL+aVsOe7hOWIhuWIq+aYvuekuuW3puS4iuinku+8jOWPs+S4iuinku+8jOWPs+S4i+inku+8jOW3pgoKICAgICAgICAgICAgIH0KICAgICAgICAgICB9CiAgICAgICAgIF0KICAgICAgfQogICAgICB0aGlzLmNoYXJ0c0luc3RhbmNlLnNldE9wdGlvbihhZGFwdGVyT3B0aW9uKQogICAgICB0aGlzLmNoYXJ0c0luc3RhbmNlLnJlc2l6ZSgpLy/miYvliqjnmoTosIPnlKjlm77ooajlr7nosaHnmoRyZXNpemXmiY3og73kuqfnlJ/mlYjmnpwKICAgIH0KICB9Cn0K"},{"version":3,"sources":["Seller.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Seller.vue","sourceRoot":"src/components","sourcesContent":["<!-- 商家销量统计的横向柱状图 -->\n<template>\n  <div class=\"com-container\">\n    <div class=\"com-chart\" ref=\"seller_ref\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      chartsInstance:null,\n      allData:null,  //服务器返回的数据\n      currentPage:1,//当前显示页数\n      totalPage:0, //一共有多少页\n      timerId:null//对应定时器\n    };\n  },\n  mounted(){\n    this.initChart()\n    this.getData()\n    window.addEventListener('resize',this.screenAdapter)\n    this.screenAdapter()//在页面加载完成时，主动进行屏幕的适配（如第一次进入页面时）\n  },\n  destroyed () {\n    clearInterval(this.timerId)\n    window.removeEventListener('resize',this.screenAdapter)//在组件销毁时，需要将监听器取消掉\n  },\n  methods: {\n    //初始化echartsInstance对象,需要全局echarts对象\n    initChart(){\n      this.chartsInstance=this.$echarts.init(this.$refs.seller_ref,'chalk')\n      //对图表初始化配置的控制\n      const initOption = {\n            title:{\n         text:\"🗝 商家销售统计\",\n         left:20,\n         top:20\n        },\n        grid:{//坐标轴的配置\n          top:'20%',\n          left:'3%',\n          right:'6%',\n          bottom:'3%',\n          containLabel:true //距离是包含坐标轴上的文字\n        },\n         xAxis:{\n           type:'value'\n         },\n         yAxis:{\n           type:'category'\n         },\n         tooltip:{//鼠标移上去的配置\n          trigger:'axis',\n          axisPointer: {\n            type:'line',\n            z:0,\n            lineStyle:{\n              color:'#2D3443'\n            }\n          }\n         },\n         series:[\n           {\n             type:\"bar\",\n             label:{//文字的显示\n               show:true,\n               position:'right',\n               textStyle:{\n                 color:'white'\n               }\n             },\n             itemStyle: {\n              //  barBorderRadius:[0,20,20,0 ],//数组分别显示左上角，右上角，右下角，左下角的大小\n               //指明颜色渐变的方向\n               //指明不同百分比之下颜色的值\n               color:new this.$echarts.graphic.LinearGradient(0,0,1,0,[\n                 //百分之0状态之下的颜色值\n                 {\n                   offset:0,\n                   color:'#5052ee'\n                 },\n                 //百分之100状态下的颜色值\n                 {\n                   offset:1,\n                   color:'#ab6ee5'\n                 }\n               ])\n\n             }\n           }\n         ]\n      }\n      this.chartsInstance.setOption(initOption)\n      //对图表对象进行鼠标事件的监听\n      this.chartsInstance.on('mouseover',()=>{\n        clearInterval(this.timerId)\n      })\n      this.chartsInstance.on('mouseout',()=>{\n        this.startInterval()\n      })\n    },\n    //获取服务器的数据\n    async getData(){\n      //http://127.0.0.1:8888/api/seller,main.js配置的,开启koa_serve,node app.js\n      const {data:ret}=await this.$http.get('seller')//是一个promise对象\n      // console.log(ret)\n      this.allData = ret\n      //对数组排序\n      this.allData.sort((a,b)=>{\n        return a.value - b.value //从小到大的排序\n      })\n      //每五个元素显示一页\n      this.totalPage = this.allData.length % 5 ===0 ? this.allData.length/5:this.allData.length/5+1\n      //获取到数据之后更新图表\n      this.updateChart()\n      //启动定时器\n      this.startInterval()\n    },\n    //更新图表\n    updateChart () {\n      //数据分页显示\n      const start = (this.currentPage - 1) * 5\n      const end = this.currentPage * 5\n      const showData = this.allData.slice(start,end)\n      const sellerNames = showData.map((item)=>{\n        return item.name\n      })\n      const sellerValues = showData.map((item)=>{\n        return item.value\n      })\n      const dataOption = {\n         yAxis:{\n           data:sellerNames\n         },\n         series:[\n           {\n             data:sellerValues,\n           }\n         ]\n      }\n      //将配置项设置给echarts实例对象\n      this.chartsInstance.setOption(dataOption)\n    },\n    startInterval(){\n      if(this.timerId){\n        clearInterval(this.timerId)\n      }\n      this.timerId = setInterval(()=>{\n        this.currentPage++\n        if(this.currentPage>this.totalPage){//边界处理\n          this.currentPage = 1\n        }\n        this.updateChart()\n      },6000)\n    },\n    //当浏览器的大小发生变化时，会调用的方法，来完成屏幕的适配\n    screenAdapter(){\n      // console.log(this.$refs.seller_ref.offsetWidth)\n      const titleFontSize = this.$refs.seller_ref.offsetWidth/100*3.6\n      const adapterOption={//和分辨率大小相关的配置项\n         title:{\n         textStyle: {\n           fontSize:titleFontSize\n         }\n        },\n         tooltip:{\n          axisPointer: {\n            lineStyle:{\n              width:titleFontSize\n            }\n          }\n         },\n         series:[\n           {\n             barWidth:titleFontSize, //控制图表的大小\n             itemStyle: {\n               barBorderRadius:[0,titleFontSize/2,titleFontSize/2,0 ],//数组分别显示左上角，右上角，右下角，左\n\n             }\n           }\n         ]\n      }\n      this.chartsInstance.setOption(adapterOption)\n      this.chartsInstance.resize()//手动的调用图表对象的resize才能产生效果\n    }\n  }\n}\n</script>\n<style lang='less' scoped>\n\n</style>\n"]}]}